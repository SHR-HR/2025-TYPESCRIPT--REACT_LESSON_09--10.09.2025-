# Файл локальных переменных окружения для Vite
# Этот файл содержит конфиденциальные данные и НЕ должен попадать в систему контроля версий (git)

# Базовый URL API для работы с постами
# Используется для всех запросов к серверу
# Формат: протокол://хост:порт/путь/к/api
# VITE_API_URL=http://localhost:8000/api/posts
VITE_API_URL=/api/posts

# Имя пользователя для аутентификации в API
# Используется для базовой HTTP-аутентификации (Basic Auth)
VITE_API_USER=admin

# Пароль для аутентификации в API
# Используется вместе с VITE_API_USER для базовой HTTP-аутентификации
# ВНИМАНИЕ: Это демонстрационный пароль, в production используйте сложные пароли
VITE_API_PASS=123

# ================================
# ПОЯСНЕНИЯ К КОММЕНТАРИЯМ
# ================================

# /*
# 1. НАЗНАЧЕНИЕ ФАЙЛА .env.local:
#    - Файл содержит переменные окружения для локальной разработки
#    - Используется сборщиком Vite для подстановки значений во время сборки
#    - Хранит конфиденциальные данные и настройки, специфичные для среды разработки

# 2. СИНТАКСИС ФАЙЛА .env:
#    - Строки, начинающиеся с #, являются комментариями и игнорируются
#    - Переменные задаются в формате КЛЮЧ=ЗНАЧЕНИЕ
#    - Пробелы вокруг знака = не допускаются
#    - Значения могут быть без кавычек, если не содержат пробелов

# 3. ПРЕФИКС VITE_:
#    - Vite автоматически загружает только переменные с префиксом VITE_
#    - Переменные без этого префикса не будут доступны в клиентском коде
#    - Это механизм безопасности для предотвращения утечки敏感 данных

# 4. БЕЗОПАСНОСТЬ И GIT:
#    - Файл .env.local должен быть добавлен в .gitignore
#    - Никогда не коммитьте файлы с паролями и секретами в репозиторий
#    - Для production используйте переменные окружения сервера

# 5. ПЕРЕМЕННАЯ VITE_API_URL:
#    - Определяет базовый адрес API сервера
#    - Значение /api/posts указывает на проксирование через Vite Dev Server
#    - В production может быть абсолютным URL (http://example.com/api)

# 6. БАЗОВАЯ АУТЕНТИФИКАЦИЯ:
#    - VITE_API_USER и VITE_API_PASS используются для HTTP Basic Auth
#    - Это демонстрационные значения, в реальном проекте нужны настоящие учетные данные
#    - Никогда не используйте простые пароли в production

# 7. ПРОКСИРОВАНИЕ VITE:
#    - При использовании относительного пути (/api/posts) Vite проксирует запросы
#    - Настройка прокси делается в vite.config.ts
#    - Позволяет избежать CORS ошибок во время разработки

# 8. ПРИОРИТЕТЫ ЗАГРУЗКИ .env ФАЙЛОВ:
#    - .env.local имеет высший приоритет для локальной разработки
#    - .env.development - для development среды
#    - .env.production - для production среды
#    - .env - общие переменные для всех сред

# 9. ДОСТУП К ПЕРЕМЕННЫМ В КОДЕ:
#    - Переменные доступны через import.meta.env.VITE_НАЗВАНИЕ
#    - TypeScript типы определены в vite-env.d.ts
#    - Значения подставляются на этапе сборки

# 10. ЛУЧШИЕ ПРАКТИКИ:
#     - Используйте разные учетные данные для development, staging и production
#     - Храните секреты в защищенных хранилищах (Vault, AWS Secrets Manager)
#     - Регулярно обновляйте пароли и ключи доступа
#     - Используйте .env.example файл для документирования необходимых переменных
# */

# // =============================================================================
# // КОНЕЦ ФАЙЛА
# // =============================================================================
// Экспорт типа Post для описания структуры данных поста
export type Post = {
  // Уникальный идентификатор поста, может быть строкой или числом
  id: string | number;
  // Заголовок поста (обязательное поле строкового типа)
  title: string;
  // Содержание/текст поста (обязательное поле строкового типа)
  content: string;
  // Автор поста (необязательное поле строкового типа)
  author?: string;
  // URL адрес изображения для поста (необязательное поле строкового типа)
  image_url?: string;
  // Дата и время создания поста (необязательное поле, может быть строкой или объектом Date)
  created_at?: string | Date;
  // Дата и время последнего обновления поста (необязательное поле, может быть строкой или объектом Date)
  updated_at?: string | Date;
};

// Экспорт типа PostPayload для описания данных при создании или обновлении поста
export type PostPayload = {
  // Заголовок поста (обязательное поле строкового типа)
  title: string;
  // Содержание/текст поста (обязательное поле строкового типа)
  content: string;
  // Автор поста (необязательное поле строкового типа)
  author?: string;
  // URL адрес изображения для поста (необязательное поле строкового типа)
  image_url?: string;
};

/* ================= ПОЯСНЕНИЯ К КОММЕНТАРИЯМ =================

1. НАЗНАЧЕНИЕ МОДУЛЯ:
   - Модуль содержит TypeScript типы для работы с постами
   - Определяет структуры данных для полной сущности поста и данных для создания/обновления
   - Обеспечивает типобезопасность во всем приложении

2. ТИП POST:
   - Описывает полную сущность поста со всеми возможными полями
   - Используется для данных, полученных из API или хранилища
   - Содержит как обязательные, так и необязательные поля

3. ТИП POSTPAYLOAD:
   - Описывает данные необходимые для создания или обновления поста
   - Не включает поля которые генерируются сервером (id, created_at, updated_at)
   - Используется при отправке данных на сервер

4. СТРУКТУРА ПОЛЕЙ:
   - id: Уникальный идентификатор, может быть строкой или числом для гибкости
   - title: Обязательное поле для заголовка поста
   - content: Обязательное поле для основного содержимого
   - author: Необязательное поле для имени автора
   - image_url: Необязательное поле для ссылки на изображение
   - created_at: Необязательное поле для метки времени создания
   - updated_at: Необязательное поле для метки времени обновления

5. СИНТАКСИС TYPESCRIPT:
   - ? обозначает необязательные (optional) поля
   | обозначает union types (объединение типов)
   - Строковый литерал типа для точного определения структуры

6. ОБОСНОВАНИЕ РАЗДЕЛЕНИЯ ТИПОВ:
   - Post включает все поля, включая серверные (id, даты)
   - PostPayload включает только поля, которые пользователь может отправить
   - Разделение предотвращает случайную отправку серверных полей

7. КОНВЕНЦИИ ИМЕНОВАНИЯ:
   - snake_case для полей соответствующих API (image_url, created_at)
   - Соответствует часто используемым соглашениям в JSON API
   - camelCase мог бы использоваться, но snake_case лучше соответствует бэкенду

8. ГИБКОСТЬ ТИПОВ:
   - string | number для id обеспечивает совместимость с разными API
   - string | Date для дат позволяет работать как с сырыми строками, так и с объектами Date
   - Необязательные поля позволяют работать с частичными данными
*/

// =============================================================================
// КОНЕЦ ФАЙЛА
// =============================================================================
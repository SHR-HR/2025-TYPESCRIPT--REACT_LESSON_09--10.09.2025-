// Тройная косая черта - директива ссылки на типы для TypeScript
// Указывает TypeScript включить типы из vite/client для поддержки Vite
/// <reference types="vite/client" />

// Объявление интерфейса ImportMetaEnv для переменных окружения Vite
// Этот интерфейс описывает структуру объекта с переменными окружения
interface ImportMetaEnv {
    // Объявление переменной VITE_API_URL как только для чтения (readonly)
    // Содержит базовый URL API сервера, например: http://localhost:8000/api/posts
    readonly VITE_API_URL: string;  // например: http://localhost:8000/api/posts

    // Объявление переменной VITE_API_USER как только для чтения
    // Содержит имя пользователя для аутентификации API, например: admin
    readonly VITE_API_USER: string; // admin

    // Объявление переменной VITE_API_PASS как только для чтения
    // Содержит пароль для аутентификации API, например: 123
    readonly VITE_API_PASS: string; // 123
}

// Объявление интерфейса ImportMeta для мета-информации модулей
// Расширяет стандартный интерфейс ImportMeta из Vite
interface ImportMeta {
    // Свойство env только для чтения, содержащее переменные окружения
    // Тип ImportMetaEnv обеспечивает типобезопасность при доступе к переменным
    readonly env: ImportMetaEnv;
}


// ================================
// ПОЯСНЕНИЯ К КОММЕНТАРИЯМ
// ================================

/*
1. Назначение файла vite-env.d.ts:
   - Это декларационный файл TypeScript для Vite
   - Предоставляет TypeScript информацию о типах переменных окружения
   - Обеспечивает автодополнение и проверку типов для process.env

2. Директива triple-slash:
   - /// <reference types="vite/client" /> - специальный комментарий TypeScript
   - Указывает компилятору включить типы из указанного модуля
   - В данном случае подключает типы Vite

3. Переменные окружения Vite:
   - Vite использует префикс VITE_ для переменных окружения на клиенте
   - Эти переменные автоматически заменяются во время сборки
   - Доступны через import.meta.env

4. Модификатор readonly:
   - Гарантирует, что переменные окружения нельзя изменить во время выполнения
   - Соответствует природе переменных окружения (они постоянны)
   - Предотвращает случайные изменения

5. Безопасность:
   - Переменные с секретными данными (пароли) НЕ должны храниться в клиентском коде
   - В реальных проектах используйте серверную аутентификацию
   - Данный пример предназначен только для учебных целей

6. Процесс работы:
   - Vite заменяет import.meta.env.VITE_API_URL на значение из .env файла
   - TypeScript проверяет типы на этапе компиляции
   - Автодополнение работает в IDE благодаря этим объявлениям

7. Структура интерфейсов:
   - ImportMetaEnv описывает доступные переменные окружения
   - ImportMeta расширяет стандартный интерфейс свойством env
   - TypeScript автоматически объединяет эти объявления с существующими типами

8. Использование в коде:
   - const apiUrl = import.meta.env.VITE_API_URL;
   - TypeScript будет знать тип apiUrl как string
   - Ошибка при обращении к несуществующей переменной

9. Масштабируемость:
   - Легко добавить новые переменные окружения
   - Централизованное управление типами переменных
   - Автоматическая проверка во всем проекте

10. Важность для разработки:
    - Избегает ошибок из-за опечаток в именах переменных
    - Обеспечивает надежность при работе с окружением
    - Улучшает опыт разработки с автодополнением
*/


// =============================================================================
// КОНЕЦ ФАЙЛА
// =============================================================================

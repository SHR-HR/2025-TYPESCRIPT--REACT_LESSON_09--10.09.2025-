// Стили для страницы с постами
// Используются CSS-переменные для единой системы дизайна

.page {
  // Минимальная высота равна 100% высоты viewport (окна браузера)
  min-height: 100vh;
  // Цвет фона страницы используя системную переменную для вторичного фона
  background-color: var(--color-bg-secondary);
}

.container {
  // Максимальная ширина контейнера 800px для удобочитаемости
  max-width: 800px;
  // Центрирование контейнера по горизонтали
  margin: 0 auto;
  // Внутренние отступы используя системную переменную для больших отступов
  padding: var(--spacing-lg);
}

.header {
  // Выравнивание текста по центру
  text-align: center;
  // Внешний отступ снизу используя системную переменную для очень больших отступов
  margin-bottom: var(--spacing-xl);
  // Внутренние отступы сверху и снизу используя системную переменную
  padding: var(--spacing-lg) 0;
  // Цвет фона заголовка используя системную переменную для основного фона
  background-color: var(--color-bg-primary);
  // Скругление углов используя системную переменную для больших скруглений
  border-radius: var(--border-radius-lg);
  // Тень элемента используя системную переменную для маленькой тени
  box-shadow: var(--shadow-sm);
}

.title {
  // Большой размер шрифта для главного заголовка
  font-size: 2.5rem;
  // Жирное начертание шрифта
  font-weight: 700;
  // Цвет текста используя системную переменную для основного текста
  color: var(--color-text-primary);
  // Внешний отступ снизу используя системную переменную для средних отступов
  margin-bottom: var(--spacing-md);
}

.subtitle {
  // Цвет текста используя системную переменную для вторичного текста
  color: var(--color-text-secondary);
  // Размер шрифта немного больше базового
  font-size: 1.1rem;
  // Внешний отступ снизу используя системную переменную для больших отступов
  margin-bottom: var(--spacing-lg);
}

.controls {
  // Flex-контейнер для горизонтального расположения кнопок управления
  display: flex;
  // Выравнивание элементов по центру по горизонтали
  justify-content: center;
  // Расстояние между кнопками используя системную переменную для средних отступов
  gap: var(--spacing-md);
  // Внешний отступ снизу используя системную переменную для больших отступов
  margin-bottom: var(--spacing-lg);
}

.limitButton {
  // Цвет фона используя системную переменную для вторичного цвета
  background-color: var(--color-secondary);
  // Белый цвет текста для контраста
  color: white;
  // Полужирное начертание шрифта
  font-weight: 500;

  // Стили при наведении на кнопку изменения лимита
  &:hover {
    // Более темный оттенок синего/серого при наведении
    background-color: #475569;
  }
}

.refreshButton {
  // Цвет фона используя системную переменную для основного цвета
  background-color: var(--color-primary);
  // Белый цвет текста для контраста
  color: white;

  // Стили при наведении на кнопку обновления
  &:hover {
    // Изменение цвета фона при наведении используя системную переменную
    background-color: var(--color-primary-hover);
  }
}

.content {
  // Grid-контейнер для расположения секций
  display: grid;
  // Расстояние между grid-элементами используя системную переменную для очень больших отступов
  gap: var(--spacing-xl);
}

.postsSection {
  // Порядок отображения секции с постами (второй по порядку)
  order: 2;
}

.formSection {
  // Порядок отображения секции с формой (первый по порядку)
  order: 1;
}

.sectionTitle {
  // Размер шрифта для заголовков секций
  font-size: 1.5rem;
  // Полужирное начертание шрифта
  font-weight: 600;
  // Цвет текста используя системную переменную для основного текста
  color: var(--color-text-primary);
  // Внешний отступ снизу используя системную переменную для средних отступов
  margin-bottom: var(--spacing-md);
  // Внутренний отступ снизу для визуального разделения
  padding-bottom: var(--spacing-xs);
  // Нижняя граница толщиной 2px основного цвета
  border-bottom: 2px solid var(--color-primary);
  // Отображение как inline-block чтобы граница была только под текстом
  display: inline-block;
}

.postsList {
  // Убираем стандартные маркеры списка
  list-style: none;
  // Убираем стандартные отступы списка
  padding: 0;
  // Убираем стандартные отступы списка
  margin: 0;
}

.loading {
  // Flex-контейнер для центрирования индикатора загрузки
  display: flex;
  // Центрирование по горизонтали
  justify-content: center;
  // Центрирование по вертикали
  align-items: center;
  // Внутренние отступы используя системную переменную для очень больших отступов
  padding: var(--spacing-xl);
  // Цвет фона используя системную переменную для основного фона
  background-color: var(--color-bg-primary);
  // Скругление углов используя системную переменную для больших скруглений
  border-radius: var(--border-radius-lg);
  // Тень элемента используя системную переменную для маленькой тени
  box-shadow: var(--shadow-sm);
}

.loadingSpinner {
  // Размер индикатора загрузки 24x24px
  width: 24px;
  height: 24px;
  // Основная граница индикатора - светлый цвет
  border: 3px solid var(--color-bg-tertiary);
  // Верхняя граница индикатора - основной цвет (создает эффект вращения)
  border-top: 3px solid var(--color-primary);
  // Круглая форма индикатора
  border-radius: 50%;
  // Анимация вращения: название spin, длительность 1s, линейная, бесконечное повторение
  animation: spin 1s linear infinite;
  // Внешний отступ справа используя системную переменную для маленьких отступов
  margin-right: var(--spacing-sm);
}

// Keyframes анимации для вращения индикатора загрузки
@keyframes spin {
  0% {
    // Начальное положение - 0 градусов
    transform: rotate(0deg);
  }

  100% {
    // Конечное положение - 360 градусов (полный оборот)
    transform: rotate(360deg);
  }
}

.loadingText {
  // Цвет текста используя системную переменную для вторичного текста
  color: var(--color-text-secondary);
  // Размер шрифта 16px для accessibility
  font-size: 16px;
}

.error {
  // Красноватый цвет фона для сообщения об ошибке
  background-color: #fef2f2;
  // Красная граница для выделения ошибки
  border: 1px solid #fecaca;
  // Цвет текста используя системную переменную для ошибок
  color: var(--color-error);
  // Внутренние отступы используя системную переменную для средних отступов
  padding: var(--spacing-md);
  // Скругление углов используя системную переменную
  border-radius: var(--border-radius);
  // Внешний отступ снизу используя системную переменную для средних отступов
  margin-bottom: var(--spacing-md);
  // Полужирное начертание для выделения сообщения об ошибке
  font-weight: 500;
}

.empty {
  // Выравнивание текста по центру для пустого состояния
  text-align: center;
  // Внутренние отступы используя системную переменную для очень больших отступов
  padding: var(--spacing-xl);
  // Цвет фона используя системную переменную для основного фона
  background-color: var(--color-bg-primary);
  // Скругление углов используя системную переменную для больших скруглений
  border-radius: var(--border-radius-lg);
  // Тень элемента используя системную переменную для маленькой тени
  box-shadow: var(--shadow-sm);

  // Стили для иконки пустого состояния
  .emptyIcon {
    // Крупный размер иконки
    font-size: 3rem;
    // Цвет иконки используя системную переменную для приглушенного текста
    color: var(--color-text-muted);
    // Внешний отступ снизу используя системную переменную для средних отступов
    margin-bottom: var(--spacing-md);
  }

  // Стили для текста пустого состояния
  .emptyText {
    // Цвет текста используя системную переменную для приглушенного текста
    color: var(--color-text-muted);
    // Увеличенный размер шрифта
    font-size: 18px;
  }
}

.stats {
  // Flex-контейнер для статистики
  display: flex;
  // Распределение пространства между элементами статистики
  justify-content: space-between;
  // Выравнивание элементов по центру по вертикали
  align-items: center;
  // Внутренние отступы используя системную переменную для средних отступов
  padding: var(--spacing-md);
  // Цвет фона используя системную переменную для основного фона
  background-color: var(--color-bg-primary);
  // Скругление углов используя системную переменную
  border-radius: var(--border-radius);
  // Внешний отступ снизу используя системную переменную для средних отступов
  margin-bottom: var(--spacing-md);
  // Тень элемента используя системную переменную для маленькой тени
  box-shadow: var(--shadow-sm);
  // Уменьшенный размер шрифта для статистики
  font-size: 14px;
  // Цвет текста используя системную переменную для вторичного текста
  color: var(--color-text-secondary);
}

// Стили для контейнера временных меток (времени создания и обновления поста)
.timestamps {
  // Устанавливаем flex-контейнер для горизонтального расположения элементов
  display: flex;
  // Расстояние между элементами использует CSS-переменную для средних отступов
  gap: var(--spacing-md);
  // Выравнивание элементов по центру по вертикали
  align-items: center;
  // Запрет переноса текста на новую строку (все временные метки в одной строке)
  white-space: nowrap;

  // Стили для всех элементов span внутри контейнера .timestamps
  span {
    // Цвет текста использует CSS-переменную для вторичного текста
    color: var(--color-text-secondary);
    // Размер шрифта: 14px
    font-size: 14px;
  }
}

// Медиа-запрос для адаптивности на устройствах с шириной до 768px (мобильные устройства)
@media (max-width: 768px) {
  .container {
    // Уменьшаем внутренние отступы на мобильных устройствах
    padding: var(--spacing-md);
  }

  .title {
    // Уменьшаем размер главного заголовка на мобильных устройствах
    font-size: 2rem;
  }

  .controls {
    // Меняем направление flex на вертикальное
    flex-direction: column;
    // Растягиваем элементы на всю ширину
    align-items: stretch;
  }

  .stats {
    // Меняем направление flex на вертикальное
    flex-direction: column;
    // Добавляем расстояние между элементами статистики
    gap: var(--spacing-xs);
    // Выравнивание текста по центру
    text-align: center;
  }
}

/* ================= ПОЯСНЕНИЯ К КОММЕНТАРИЯМ ================= */

/* 
1. CSS-переменные (var(--имя-переменной)):
   Используются для поддержания единого стиля во всем приложении.
   Позволяют легко изменять цвета, отступы, радиусы скругления и тени
   в одном месте (обычно в :root или глобальных стилях).

2. Единицы измерения:
   - vh (viewport height): относительная единица, процент от высоты окна браузера
   - rem: относительная единица, зависит от размера шрифта корневого элемента
   - px: абсолютные пиксели (используются для точного контроля размеров)

3. Flexbox布局:
   .controls, .loading, .stats используют flexbox для гибкого расположения элементов.
   justify-content: center - центрирование по горизонтали
   align-items: center - центрирование по вертикали
   flex-direction: column - вертикальное направление элементов

4. Grid布局:
   .content использует CSS Grid для расположения секций.
   gap: var(--spacing-xl) - расстояние между grid-элементами

5. Псевдоклассы (:hover):
   :hover - стили при наведении курсора на кнопки
   Обеспечивают интерактивность и визуальную обратную связь

6. Анимации (@keyframes):
   spin анимация создает эффект вращения для индикатора загрузки
   transform: rotate() - вращение элемента на заданный угол

7. Медиа-запросы (@media):
   Адаптивный дизайн для мобильных устройств (max-width: 768px)
   Изменяет размеры, отступы и расположение элементов на маленьких экранах

8. БЭМ-методология:
   Используются вложенные селекторы (.empty .emptyIcon) для компонентного подхода
   Это позволяет избежать конфликтов имен классов

9. Семантические классы:
   Имена классов отражают их назначение (.loading, .error, .empty)
   Упрощают понимание и поддержку кода

10. Система отступов:
    Используются переменные (--spacing-xs, --spacing-sm, --spacing-md и т.д.)
    для соблюдения единой системы пропорций и ритма

11. Цветовая система:
    Используются семантические переменные (--color-primary, --color-error и т.д.)
    для легкой смены темы и поддержания консистентности

12. Состояния компонентов:
    .loading - состояние загрузки
    .error - состояние ошибки  
    .empty - пустое состояние
    Каждое состояние имеет уникальные стили для лучшего UX

13. Порядок отображения (order):
    .formSection order: 1 - форма отображается первой
    .postsSection order: 2 - посты отображаются вторыми
    Позволяет управлять порядком без изменения HTML структуры

14. Доступность (accessibility):
    Размер шрифта 16px для .loadingText - минимальный рекомендуемый размер
    Контрастные цвета для текста и фона

15. Box-model:
    padding - внутренние отступы
    margin - внешние отступы
    border - границы
    box-shadow - тени для создания глубины

16. Сброс стилей:
    list-style: none, padding: 0, margin: 0 для .postsList
    Убирает стандартные стили браузера для списков

17. Плавные переходы:
    Анимация вращения имеет linear timing function для равномерного движения
    Бесконечное повторение (infinite) показывающее процесс загрузки

18. Визуальная иерархия:
    Разные размеры шрифтов (2.5rem, 1.5rem, 1.1rem) создают четкую иерархию
    Жирность шрифта (700, 600, 500) усиливает визуальную иерархию

19. Декоративные элементы:
    border-bottom у .sectionTitle для визуального разделения
    box-shadow для создания карточек и глубины

20. Адаптивная типографика:
    Уменьшение размера шрифта на мобильных устройствах
    Изменение направление flex-контейнеров на вертикальное
*/

// =============================================================================
// КОНЕЦ ФАЙЛА
// =============================================================================
// Стили для карточки поста
.card {
  // Основной фон карточки, использует CSS-переменную для унификации цветовой схемы
  background-color: var(--color-bg-primary);
  // Скругление углов карточки, использует переменную для большого радиуса
  border-radius: var(--border-radius-lg);
  // Тень карточки, использует переменную для маленькой тени
  box-shadow: var(--shadow-sm);
  // Внутренние отступы карточки, использует переменную для большого отступа
  padding: var(--spacing-lg);
  // Внешний отступ снизу между карточками
  margin-bottom: var(--spacing-md);
  // Граница карточки светло-серого цвета
  border: 1px solid #e2e8f0;
  // Плавный переход всех свойств с быстрой скоростью
  transition: all var(--transition-fast);

  // Стили при наведении на карточку
  &:hover {
    // Увеличение тени при наведении
    box-shadow: var(--shadow-md);
    // Легкое перемещение карточки вверх при наведении
    transform: translateY(-2px);
    // Изменение цвета границы при наведении
    border-color: #cbd5e1;
  }
}

// Заголовок карточки (содержит название и кнопки действий)
.header {
  // Flex-контейнер для расположения элементов в строку
  display: flex;
  // Распределение пространства между элементами
  justify-content: space-between;
  // Выравнивание элементов по верхнему краю
  align-items: flex-start;
  // Расстояние между элементами
  gap: var(--spacing-md);
  // Отступ снизу
  margin-bottom: var(--spacing-md);
}

// Стили для заголовка поста
.title {
  // Размер шрифта (1.25rem = 20px при базовом размере 16px)
  font-size: 1.25rem;
  // Полужирное начертание
  font-weight: 600;
  // Цвет текста, использует CSS-переменную
  color: var(--color-text-primary);
  // Убираем внешние отступы у заголовка
  margin: 0;
  // Высота строки для лучшей читабельности
  line-height: 1.3;
  // Занимает все доступное пространство
  flex: 1;
  // Перенос длинных слов на новую строку
  word-wrap: break-word;
}

// Контейнер для кнопок действий (редактирование, удаление)
.actions {
  // Flex-контейнер для кнопок
  display: flex;
  // Расстояние между кнопками
  gap: var(--spacing-xs);
  // Запрет на уменьшение размера контейнера
  flex-shrink: 0;
}

/* ——— CTA-тизер (призыв к действию) ——— */
// Обертка для тизера (ссылка на полную версию)
.teaserWrap {
  // Блочное отображение для занятия всей ширины
  display: block;
  /* важно: <a> как блочный */
  // Относительное позиционирование для внутренних абсолютно позиционированных элементов
  position: relative;
  // Скругление углов
  border-radius: var(--border-radius);
  // Скрытие содержимого, выходящего за границы
  overflow: hidden;
  // Отступ снизу
  margin-bottom: var(--spacing-md);
  // Запрет выделения текста
  user-select: none;
  // Наследование цвета текста
  color: inherit;
  // Убираем подчеркивание ссылки
  text-decoration: none;

  // Стили при наведении на тизер
  &:hover .teaserImg {
    // Увеличение изображения
    transform: scale(1.03);
    // Размытие и затемнение изображения
    filter: blur(6px) brightness(.85);
  }

  // Стили при наведении на CTA-кнопку
  &:hover .cta {
    // Легкое перемещение кнопки вверх
    transform: translateY(-1px);
  }
}

// Стили для изображения тизера
.teaserImg {
  // Ширина на 100% родительского контейнера
  width: 100%;
  // Фиксированная высота изображения
  height: 220px;
  // Обрезка и заполнение области изображения
  object-fit: cover;
  // Блочное отображение
  display: block;
  // Эффекты фильтра: размытие, затемнение, снижение насыщенности
  filter: blur(8px) brightness(.75) saturate(.9);
  /* «засекречено» */
  // Небольшое увеличение изображения
  transform: scale(1.02);
  // Плавный переход для фильтров и трансформации
  transition: filter .18s ease, transform .18s ease;
}

// Заполнитель для случая отсутствия изображения
.teaserPlaceholder {
  // Высота как у изображения
  height: 220px;
  // Градиентный фон серых тонов
  background: linear-gradient(135deg, #e2e8f0, #cbd5e1);
}

// Наложение поверх изображения тизера
.teaserOverlay {
  // Абсолютное позиционирование на всю область родителя
  position: absolute;
  // Сокращенная запись для top, right, bottom, left: 0
  inset: 0;
  // Flex-контейнер с вертикальным направлением
  display: flex;
  flex-direction: column;
  // Центрирование по горизонтали и вертикали
  align-items: center;
  justify-content: center;
  // Расстояние между элементами
  gap: 10px;
  // Белый цвет текста
  color: #fff;
  // Выравнивание текста по центру
  text-align: center;
  // Внутренние отступы
  padding: 16px;
  // Отключение событий мыши (кликабельность у родителя)
  pointer-events: none;
  /* вся кликабельность — у родителя-ссылки */
  // Сложный градиентный фон для эффекта наложения
  background:
    radial-gradient(transparent, rgba(0, 0, 0, .35) 70%),
    linear-gradient(to bottom, rgba(0, 0, 0, .15), rgba(0, 0, 0, .35));
}

// Подсказка на тизере
.teaserHint {
  // Маленький размер шрифта
  font-size: 13px;
  // Межбуквенное расстояние
  letter-spacing: .3px;
  // Внутренние отступы
  padding: 4px 10px;
  // Сильное скругление для овальной формы
  border-radius: 9999px;
  // Полупрозрачный белый фон
  background: rgba(255, 255, 255, .18);
  // Полупрозрачная белая граница
  border: 1px solid rgba(255, 255, 255, .25);
}

// Кнопка призыва к действию
.cta {
  // Плавный переход для трансформации
  transition: transform .12s ease;
}

/* ——— текст отрывка ——— */
// Стили для отрывка текста поста
.excerpt {
  // Цвет текста, использует переменную для вторичного текста
  color: var(--color-text-secondary);
  // Внешние отступы: сверху 6px, снизу 0, снизу большой отступ
  margin: 6px 0 var(--spacing-md);
  // Высота строки для лучшей читабельности
  line-height: 1.6;
}

// Мета-информация (автор, даты)
.meta {
  // Flex-контейнер в строку
  display: flex;
  // Распределение пространства между элементами
  justify-content: space-between;
  // Выравнивание по центру по вертикали
  align-items: center;
  // Размер шрифта
  font-size: 14px;
  // Цвет текста, использует переменную для приглушенного текста
  color: var(--color-text-muted);
  // Отступ сверху
  padding-top: var(--spacing-sm);
  // Верхняя граница светло-голубого цвета
  border-top: 1px solid #f1f5f9;
  // Разрешение переноса на новую строку
  flex-wrap: wrap;
  // Расстояние между элементами
  gap: var(--spacing-xs);
}

// Стили для имени автора
.author {
  // Полужирное начертание
  font-weight: 500;
  // Цвет текста, использует переменную для вторичного текста
  color: var(--color-text-secondary);
}

// Контейнер для временных меток (дата создания и обновления)
.timestamps {
  // Flex-контейнер в строку
  display: flex;
  // Расстояние между элементами
  gap: var(--spacing-md);
  // Выравнивание по центру по вертикали
  align-items: center;
  // Запрет переноса на новую строку
  white-space: nowrap;

  // Стили для текста внутри временных меток
  span {
    // Цвет текста, использует переменную для вторичного текста
    color: var(--color-text-secondary);
    // Размер шрифта
    font-size: 14px;
  }
}

/* кнопки действий */
// Базовые стили для всех кнопок
.buttonBase {
  // Flex-контейнер для иконок и текста
  display: inline-flex;
  // Выравнивание по центру по вертикали
  align-items: center;
  // Расстояние между иконкой и текстом
  gap: var(--spacing-xs);
  // Внутренние отступы
  padding: var(--spacing-xs) var(--spacing-sm);
  // Скругление углов
  border-radius: var(--border-radius);
  // Убираем подчеркивание
  text-decoration: none;
  // Полужирное начертание
  font-weight: 500;
  // Высота строки
  line-height: 1;
  // Указатель курсора при наведении
  cursor: pointer;
  // Убираем границу
  border: none;
  // Запрет выделения текста
  user-select: none;
  // Размер шрифта
  font-size: 12px;
  // Белый цвет текста
  color: #fff;
}

// Стили для кнопки обновления/редактирования
.updateButton {
  // Наследование базовых стилей кнопки
  @extend .buttonBase;
  // Зеленый фон, использует CSS-переменную
  background-color: var(--color-success);

  // Стили при наведении
  &:hover {
    // Темно-зеленый фон при наведении
    background-color: #059669;
  }

  // Стили для фокуса (доступность)
  &:focus-visible {
    // Синяя обводка при фокусе
    outline: 2px solid var(--color-primary);
    // Отступ обводки от элемента
    outline-offset: 2px;
  }
}

// Стили для кнопки удаления
.deleteButton {
  // Наследование базовых стилей кнопки
  @extend .buttonBase;
  // Красный фон, использует CSS-переменную
  background-color: var(--color-error);

  // Стили при наведении
  &:hover {
    // Темно-красный фон при наведении
    background-color: #dc2626;
  }

  // Стили для фокуса (доступность)
  &:focus-visible {
    // Синяя обводка при фокусе
    outline: 2px solid var(--color-primary);
    // Отступ обводки от элемента
    outline-offset: 2px;
  }
}

// Адаптивные стили для мобильных устройств (ширина до 768px)
@media (max-width: 768px) {
  .header {
    // Вертикальное направление flex-элементов
    flex-direction: column;
    // Растягивание элементов на всю ширину
    align-items: stretch;
    // Уменьшение расстояния между элементами
    gap: var(--spacing-sm);
  }

  .actions {
    // Выравнивание кнопок по правому краю
    justify-content: flex-end;
  }

  .meta {
    // Вертикальное направление flex-элементов
    flex-direction: column;
    // Выравнивание элементов по левому краю
    align-items: flex-start;
    // Расстояние между элементами
    gap: var(--spacing-xs);
  }
}

/* ================= ПОЯСНЕНИЯ К КОММЕНТАРИЯМ ================= */

/* 
1. CSS-переменные (var(--имя-переменной)):
   Используются для поддержания единого стиля во всем приложении.
   Позволяют легко изменять цвета, отступы, радиусы скругления и тени
   в одном месте (обычно в :root или глобальных стилях).

2. Flexbox布局:
   .header, .actions, .meta, .timestamps используют flexbox для 
   гибкого расположения элементов. Это современный подход к верстке,
   обеспечивающий адаптивность.

3. Псевдоклассы (:hover, :focus-visible):
   :hover - стили при наведении курсора
   :focus-visible - стили при фокусировке (важно для доступности)

4. Transition (переходы):
   Обеспечивают плавные анимации при изменении свойств.
   transition-fast и transition-sm - CSS-переменные для скорости анимации.

5. Transform (трансформации):
   translateY(-2px) - перемещение по вертикали
   scale(1.03) - увеличение масштаба

6. Filter (фильтры):
   blur() - размытие
   brightness() - яркость
   saturate() - насыщенность

7. Адаптивный дизайн:
   Медиа-запрос @media (max-width: 768px) изменяет стили для мобильных устройств.
   Flex-контейнеры меняют направление с горизонтального на вертикальное.

8. Extend (@extend):
   Позволяет наследовать стили от другого селектора, избегая дублирования кода.

9. Единицы измерения:
   rem - относительная единица, зависящая от размера шрифта корневого элемента
   px - абсолютные пиксели (используются реже для лучшей доступности)
   % - проценты от размера родительского элемента

10. BEM-методология:
    Используются модификаторы (--modifier) для изменения стилей базовых блоков.

11. CSS Custom Properties (переменные):
    Обеспечивают централизованное управление стилями и темную/светлую тему.

12. Accessibility (доступность):
    focus-visible обеспечивает видимый фокус для пользователей клавиатуры.
    user-select: none предотвращает выделение текста в интерактивных элементах.

13. Mobile-first подход:
    Базовые стили для мобильных, а затем адаптация для десктопов через медиа-запросы.

14. Spacing system:
    Используются переменные для отступов (spacing-xs, spacing-sm и т.д.)
    для соблюдения ритма и пропорций в дизайне.

15. Color system:
    Цветовая система на основе CSS-переменных обеспечивает согласованность
    и простую смену темы (светлая/тёмная).
*/



// =============================================================================
// КОНЕЦ ФАЙЛА
// =============================================================================